name: Nix CI

on:
  workflow_call:

env:
  CACHE_PRIMARY_KEY:
    nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
  CACHE_RESTORE_PREFIX: nix-${{ runner.os }}-
  CACHE_GC_SIZE: 2G
  CACHE_PURGE: true
  CACHE_PURGE_PREFIXES: nix-${{ runner.os }}-
  CACHE_PURGE_BEFORE: 86400 # 1 day
  CACHE_PURGE_PRIMARY_KEY: never

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nixbuild/nix-quick-install-action@v30
      - uses: nix-community/cache-nix-action@v6
        with:
          primary-key: ${{ env.CACHE_PRIMARY_KEY }}
          restore-prefixes-first-match: ${{ env.CACHE_RESTORE_PREFIX }}
          gc-max-store-size-linux: ${{ env.CACHE_GC_SIZE }}
          purge: ${{ env.CACHE_PURGE }}
          purge-prefixes: ${{ env.CACHE_PURGE_PREFIXES }}
          purge-created: ${{ env.PURGE_BEFORE }}
          purge-primary-key: ${{ env.CACHE_PURGE_PRIMARY_KEY }}
      - name: Check Formatting
        run:
          nix shell nixpkgs#nixfmt-rfc-style -c find . -name "*.nix" -exec
          nixfmt --strict --check {} +

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nixbuild/nix-quick-install-action@v30
      - uses: nix-community/cache-nix-action@v6
        with:
          primary-key: ${{ env.CACHE_PRIMARY_KEY }}
          restore-prefixes-first-match: ${{ env.CACHE_RESTORE_PREFIX }}
          gc-max-store-size-linux: ${{ env.CACHE_GC_SIZE }}
          purge: ${{ env.CACHE_PURGE }}
          purge-prefixes: ${{ env.CACHE_PURGE_PREFIXES }}
          purge-created: ${{ env.PURGE_BEFORE }}
          purge-primary-key: ${{ env.CACHE_PURGE_PRIMARY_KEY }}
      - name: Run statix
        run: nix shell nixpkgs#statix -c statix check .

  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nixbuild/nix-quick-install-action@v30
      - uses: nix-community/cache-nix-action@v6
        with:
        with:
          primary-key: ${{ env.CACHE_PRIMARY_KEY }}
          restore-prefixes-first-match: ${{ env.CACHE_RESTORE_PREFIX }}
          gc-max-store-size-linux: ${{ env.CACHE_GC_SIZE }}
          purge: ${{ env.CACHE_PURGE }}
          purge-prefixes: ${{ env.CACHE_PURGE_PREFIXES }}
          purge-created: ${{ env.PURGE_BEFORE }}
          purge-primary-key: ${{ env.CACHE_PURGE_PRIMARY_KEY }}
      - name: Run nix flake check
        run: nix flake check
